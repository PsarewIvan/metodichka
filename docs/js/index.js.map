{"version":3,"sources":["info-block.js","metrics-table.js","nav.js","select.js","tabs.js"],"names":[],"mappingspEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["(() => {\n    const infoContents = document.querySelectorAll('.js-info');\n\n    infoContents.forEach((infoContent) => {\n        const infoBlock = infoContent.querySelector('.js-info-block');\n        const infoButton = infoContent.querySelector('.js-info-button');\n\n        infoButton?.addEventListener('click', () => {\n            infoBlock?.classList.toggle('hidden');\n        });\n    });\n})();\n","(() => {\n    const table = document.querySelector('.js-metrics-table');\n    const tbody = table?.querySelector('tbody');\n    const rows = tbody?.querySelectorAll('.js-metrics-row');\n    const ellipsisAboveRow = tbody?.querySelector('.js-ellipsis-above-row');\n    const moreButton = tbody?.querySelector('.js-metrics-table-more-button');\n    const lowButton = tbody?.querySelector('.js-metrics-table-low-button');\n    const moreButtonsRow = tbody?.querySelector('.js-more-button-row');\n\n    if (rows) {\n        let todayRow = null;\n        let todayIndex = -1;\n        let hasRowsHidden = false;\n\n        rows.forEach((row, index) => {\n            if (row.classList.contains('js-today')) {\n                todayRow = row;\n                todayIndex = index;\n            }\n        });\n\n        hideRow();\n\n        if (todayIndex < 2) {\n            ellipsisAboveRow?.classList.add('hidden');\n        }\n\n        if (!hasRowsHidden) {\n            moreButtonsRow?.classList.add('hidden');\n        }\n\n        moreButton?.addEventListener('click', () => {\n            ellipsisAboveRow?.classList.add('hidden');\n            moreButton?.classList.add('hidden');\n            lowButton?.classList.remove('hidden');\n\n            rows.forEach((row) => {\n                row.classList.remove('hidden');\n            });\n        });\n\n        lowButton?.addEventListener('click', () => {\n            hideRow();\n        });\n\n        function hideRow() {\n            rows.forEach((row, index) => {\n                if (todayIndex > index + 1 || todayIndex + 1 < index) {\n                    row.classList.add('hidden');\n                    hasRowsHidden = true;\n                }\n            });\n\n            moreButton?.classList.remove('hidden');\n            lowButton?.classList.add('hidden');\n\n            ellipsisAboveRow?.classList.remove('hidden');\n        }\n    }\n})();\n","(() => {\n    let hasTableInit = false;\n    let hasMobileInit = false;\n    let hasMenuOpen = false;\n\n    const burger = document.querySelector('.js-header-burger');\n    const nav = document.querySelector('.js-nav');\n\n    const header = document.querySelector('.js-header');\n    const content = document.getElementById('js-main-content');\n\n    burger?.addEventListener('click', onBurgerClick);\n\n    window.addEventListener('resize', initMobileTable);\n    initMobileTable();\n\n    function initMobileTable() {\n        if (window.innerWidth < 1056) {\n            const headerRect = header?.getBoundingClientRect();\n\n            if (!hasTableInit) {\n                nav?.classList.add('hidden');\n            }\n\n            if (content?.stye && headerRect) {\n                content.stye.marginTop = `${headerRect.height}px`;\n            }\n\n            hasTableInit = true;\n        } else if (hasTableInit) {\n            nav?.classList.remove('hidden');\n            hasTableInit = false;\n        }\n\n        if (window.innerWidth < 768) {\n            if (!hasMobileInit) {\n            }\n\n            hasMobileInit = true;\n        } else if (hasMobileInit) {\n            hasMobileInit = false;\n        }\n    }\n\n    function onBurgerClick() {\n        if (hasMenuOpen) {\n            hasMenuOpen = false;\n            nav?.classList.add('hidden');\n            burger?.classList.remove('open');\n            document.body.classList.remove('body-lock');\n        } else {\n            hasMenuOpen = true;\n            nav?.classList.remove('hidden');\n            burger?.classList.add('open');\n            document.body.classList.add('body-lock');\n        }\n    }\n})();\n","(() => {\n    const selectsWrapper = document.querySelectorAll(\n        '.js-select-component-wrapper'\n    );\n\n    selectsWrapper.forEach((selectWrapper) => {\n        const select = selectWrapper.querySelector('.js-select-component');\n        const placeholder = select?.dataset.placeholder;\n        const options = select?.querySelectorAll('option');\n        const reset = selectWrapper?.querySelector('.js-select-reset');\n\n        const dataOptions = Array.from(options).map((option) => ({\n            text: option.innerHTML,\n            value: option.value,\n        }));\n\n        const slimSelect = new SlimSelect({\n            select,\n            settings: {\n                showSearch: false,\n            },\n            data: [\n                ...(placeholder\n                    ? [{ placeholder: true, text: placeholder }]\n                    : []),\n                ...dataOptions,\n            ],\n            events: {\n                afterChange: (evt) => {\n                    const value = evt?.[0]?.value;\n\n                    if (value) {\n                        reset.classList.remove('hidden');\n                    }\n                },\n            },\n        });\n\n        reset?.addEventListener('click', () => {\n            if (slimSelect) {\n                slimSelect.setSelected('', false);\n                reset.classList.add('hidden');\n                const selectDiv = selectWrapper?.querySelector(\n                    '.select-component_selected'\n                );\n\n                if (selectDiv) {\n                    selectDiv.classList.remove('select-component_selected');\n                }\n            }\n        });\n\n        const selectDiv = selectWrapper.querySelector(\n            `div[data-id=\"${slimSelect?.settings?.id}\"]`\n        );\n        const arrow = selectWrapper.querySelector('.ss-arrow');\n\n        select?.addEventListener('change', (event) => {\n            if (dataOptions.some(({ value }) => value === event.target.value)) {\n                selectDiv.classList.add('select-component_selected');\n                arrow?.classList.add('transparent');\n            } else {\n                selectDiv.classList.remove('select-component_selected');\n                arrow?.classList.remove('transparent');\n            }\n        });\n    });\n})();\n","(() => {\n    const tabsBlocks = document.querySelectorAll('.js-tabs');\n\n    tabsBlocks.forEach((tabs) => {\n        const buttons = tabs.querySelectorAll('.js-tab-button');\n\n        buttons.forEach((button) => {\n            button.addEventListener('click', () => {\n                resetButtons();\n                button.classList.add('active');\n            });\n        });\n\n        function resetButtons() {\n            buttons.forEach((button) => {\n                button.classList.remove('active');\n            });\n        }\n    });\n})();\n"]}